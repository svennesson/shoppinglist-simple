"use strict";angular.module("shoppinglistSimpleApp",["ngAnimate","ngCookies","ngRoute","ngTouch","as.sortable","firebase"]).config(["$routeProvider",function(a){a.when("/lists",{templateUrl:"views/lists.html",controller:"ListsCtrl"}).otherwise({redirectTo:"/lists"})}]),angular.module("shoppinglistSimpleApp").controller("ListsCtrl",["$scope","dbConnection",function(a,b){a.items=b.getItems(),a.addItem=function(){a.items.$add({content:a.formItem}),a.formItem=""},a.removeItem=function(b){a.items.splice(b,1)}}]),angular.module("shoppinglistSimpleApp").factory("dbConnection",["$firebaseArray",function(a){var b=new Firebase("https://vivid-fire-6230.firebaseio.com/");return{getItems:function(){return a(b)}}}]),angular.module("shoppinglistSimpleApp").run(["$templateCache",function(a){a.put("views/lists.html",'<form ng-submit="addItem()"> <div class="input-group"> <input type="text" class="form-control" placeholder="Item description" name="form-item" ng-model="formItem"> <span class="input-group-btn"> <button class="btn btn-primary" type="submit">Add item</button> </span> </div> </form> <ul data-as-sortable="dragControlListeners" data-ng-model="items" class="list-container"> <li data-ng-repeat="item in items" data-as-sortable-item> <div data-as-sortable-item-handle class="list-item"> {{item.content}} <span ng-click="removeItem($index)" class="glyphicon glyphicon-2x glyphicon-remove pull-right"></span> </div> </li> </ul>')}]);